def rotate_left(byte, bits):
    return ((byte << bits) & 0xFF) | (byte >> (8 - bits))

def calculate_bcc(payload):
    snp_bcc = 0
    
    for byte in payload:
        snp_bcc ^= byte
        snp_bcc = rotate_left(snp_bcc, 1)
        
    return snp_bcc

# Payload in bytes
payload = [0x1b, 0x4d, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x52, 0xc0, 0x10, 0x3a, 0x00, 0x00, 0x10, 0x0a, 
           0x00, 0x00, 0x01, 0x01, 0x21, 0xff, 0x41, 0x42, 0x31, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
           0x00, 0x17, 0x00, 0x00, 0x00, 0x00]

bcc = calculate_bcc(payload)
print(f'BCC: {bcc:02X}')